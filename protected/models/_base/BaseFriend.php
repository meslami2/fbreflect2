<?php

/**
 * This is the model base class for the table "friend".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Friend".
 *
 * Columns in table "friend" available as properties of the model,
 * followed by relations of table "friend" available as properties of the model.
 *
 * @property string $id
 * @property string $fbid
 * @property string $user
 * @property string $name
 * @property integer $chosen
 * @property integer $initial
 * @property integer $changed
 *
 * @property User $user0
 * @property Post[] $posts
 * @property PostData[] $postDatas
 */
abstract class BaseFriend extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'friend';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Friend|Friends', $n);
	}

	public static function representingColumn() {
		return 'fbid';
	}

	public function rules() {
		return array(
			array('fbid, user', 'required'),
			array('chosen, initial, changed', 'numerical', 'integerOnly'=>true),
			array('fbid', 'length', 'max'=>30),
			array('user', 'length', 'max'=>20),
			array('name', 'length', 'max'=>127),
			array('name, chosen, initial, changed', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, fbid, user, name, chosen, initial, changed', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user0' => array(self::BELONGS_TO, 'User', 'user'),
			'posts' => array(self::HAS_MANY, 'Post', 'friend'),
			'postDatas' => array(self::HAS_MANY, 'PostData', 'friend'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'fbid' => Yii::t('app', 'Fbid'),
			'user' => null,
			'name' => Yii::t('app', 'Name'),
			'chosen' => Yii::t('app', 'Chosen'),
			'initial' => Yii::t('app', 'Initial'),
			'changed' => Yii::t('app', 'Changed'),
			'user0' => null,
			'posts' => null,
			'postDatas' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('fbid', $this->fbid, true);
		$criteria->compare('user', $this->user);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('chosen', $this->chosen);
		$criteria->compare('initial', $this->initial);
		$criteria->compare('changed', $this->changed);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}